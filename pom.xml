<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">



    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.brendandw</groupId>
    <artifactId>atm-cash-dispenser</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>11</java.version>
        <spring.boot.version>2.4.4</spring.boot.version>
        <jacoco.version>0.8.6</jacoco.version>
        <jasmine.serverPort>9966</jasmine.serverPort>
        <start-class>com.github.brendandw.atm.Application</start-class>
    </properties>
     <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.4</version>
      </parent>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
       </dependency>
       <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
       </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
        </dependency>
        <!--swagger dependencies-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.6.1</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.6.1</version>
        </dependency>
       <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
            <type>jar</type>
       </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
       <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>angularjs</artifactId>
            <version>2.0.0-alpha.22</version>
            <scope>test</scope>
        </dependency>
        <!-- Test Dependencies-->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <!-- jasmin maven plugin dependencies -->
         <dependency>
              <groupId>org.webjars</groupId>
              <artifactId>jquery</artifactId>
              <version>3.1.1</version>
              <scope>test</scope>
         </dependency>
         <dependency>
              <groupId>org.webjars</groupId>
              <artifactId>angularjs</artifactId>
              <version>1.6.0</version>
              <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>angular-mocks</artifactId>
            <version>1.6.0</version>
            <scope>test</scope>
        </dependency>
         <dependency>
              <groupId>org.webjars</groupId>
              <artifactId>angular-ui-router</artifactId>
              <version>0.2.18</version>
              <scope>test</scope>
         </dependency>
    </dependencies>


  <build>
  <plugins>
    <!--execute Java unit tests-->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
          <configuration>
              <source>${java.version}</source>
              <target>${java.version}</target>
          </configuration>
      </plugin>
      <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>2.3.9.RELEASE</version>
      </plugin>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
            <includes>
                <include>**/*Test.java</include>
            </includes>
        </configuration>
    </plugin>
    <!--Generate Java code coverage reports-->
    <plugin>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>${jacoco.version}</version>
      <executions>
          <execution>
              <id>prepare-agent</id>
              <goals>
                  <goal>prepare-agent</goal>
              </goals>
          </execution>
          <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                  <goal>report</goal>
              </goals>
          </execution>
          <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                  <goal>report</goal>
              </goals>
              <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <dataFile>target/jacoco.exec</dataFile>
                  <!-- Sets the output directory for the code coverage report. -->
                  <outputDirectory>target/jacoco-coverage-report</outputDirectory>
              </configuration>
          </execution>
      </executions>
      <configuration>
          <systemPropertyVariables>
              <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
          </systemPropertyVariables>
          <excludes>
              <exclude>**/constants/*</exclude>
              <exclude>**/dto/*</exclude>
              <exclude>**/exceptions/*</exclude>
              <exclude>**/interfaces/*</exclude>
          </excludes>

      </configuration>
    </plugin>
    <!--execute Javascript unit tests-->
    <plugin>
        <groupId>com.github.klieber</groupId>
        <artifactId>phantomjs-maven-plugin</artifactId>
        <version>0.7</version>
        <executions>
            <execution>
                <goals>
                    <goal>install</goal>
                </goals>
            </execution>
        </executions>
        <configuration>
            <version>1.9.7</version>
        </configuration>
     </plugin>
     <plugin>
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <version>1.3.1.4</version>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <keepServerAlive>true</keepServerAlive>
          <webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
          <webDriverCapabilities>
            <capability>
              <name>phantomjs.binary.path</name>
              <value>${phantomjs.binary}</value>
            </capability>
          </webDriverCapabilities>
          <preloadSources>
            <source>${basedir}/src/main/resources/static/test/vendor/bind-polyfill.js</source>
            <source>${basedir}/src/main/resources/static/vendor/angular.js</source>
            <source>${basedir}/src/main/resources/static/vendor/angular-ui-router.min.js</source>
            <source>${basedir}/src/main/resources/static/vendor/sockjs-0.3.min.js</source>
            <source>${basedir}/src/test/resources/static/vendor/angular-mocks.js</source>
            <source>${basedir}/src/main/resources/static/scripts/app.module.js</source>
            <source>${basedir}/src/main/resources/static/scripts/atm.module.js</source>
            <source>${basedir}/src/main/resources/static/scripts/atm.service.js</source>
            <source>${basedir}/src/main/resources/static/scripts/atm.model.js</source>
            <source>${basedir}/src/main/resources/static/scripts/atm.routes.js</source>
            <source>${basedir}/src/main/resources/static/scripts/atm.controller.js</source>
          </preloadSources>
          <jsSrcDir>${basedir}/src/main/resources/static/scripts/</jsSrcDir>
          <jsTestSrcDir>${basedir}/src/test/resources/static/</jsTestSrcDir>
          <junitXmlReportFileName>
            TEST-jasmine.xml
          </junitXmlReportFileName>
          <specIncludes>
             <include>Test*.js</include>
          </specIncludes>
        </configuration>
    </plugin>
    <!--Generate Javascript Coverage reports-->
    <plugin>
      <groupId>com.github.timurstrekalov</groupId>
      <artifactId>saga-maven-plugin</artifactId>
      <version>1.5.5</version>
      <executions>
        <execution>
          <goals>
            <goal>coverage</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
        <baseDir>http://localhost:${jasmine.serverPort}</baseDir>
        <outputDir>target/angular-reports</outputDir>
        <noInstrumentPatterns>
          <pattern>.*/spec/.*</pattern>
          <pattern>.*/vendor/.*</pattern>
          <pattern>.*/*Test.js</pattern>
        </noInstrumentPatterns>
      </configuration>
    </plugin>

  </plugins>
</build>

</project>
